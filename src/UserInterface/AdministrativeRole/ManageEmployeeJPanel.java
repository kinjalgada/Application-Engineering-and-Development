/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Customer.Customer;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import UserInterface.AdministrativeRole.Add.AddCustomerJPanel;
import UserInterface.AdministrativeRole.Add.AddEmployeeJPanel;
import UserInterface.AdministrativeRole.edit.EditCustomerJPanel;
import UserInterface.AdministrativeRole.edit.EditEmployeeJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer,OrganizationDirectory organizationDir, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        this.enterprise = enterprise;
        populateOrganizationComboBox();
    }
    
    public void populateOrganizationComboBox(){
        orgJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            orgJComboBox.addItem(organization);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployeeDetails = new javax.swing.JTable();
        btnCreateEmployee = new javax.swing.JButton();
        orgJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();

        tblEmployeeDetails.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblEmployeeDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmployeeDetails);
        if (tblEmployeeDetails.getColumnModel().getColumnCount() > 0) {
            tblEmployeeDetails.getColumnModel().getColumn(0).setResizable(false);
            tblEmployeeDetails.getColumnModel().getColumn(1).setResizable(false);
        }

        btnCreateEmployee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCreateEmployee.setText("Create Employee");
        btnCreateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEmployeeActionPerformed(evt);
            }
        });

        orgJComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        orgJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        orgJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgJComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Organization");

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Manage Employee / Customer");

        btnEdit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEdit.setText("View/Edit Record");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(orgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addGap(76, 76, 76)
                        .addComponent(btnCreateEmployee)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orgJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateEmployee)
                    .addComponent(btnEdit)
                    .addComponent(btnBack))
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEmployeeActionPerformed
        Organization organization = (Organization) orgJComboBox.getSelectedItem();
        if (organization != null){
            if(organization.getName().equals("Verification Organization")){
                AddEmployeeJPanel addEmployeeJPanel = new AddEmployeeJPanel(userProcessContainer, organizationDir);
                userProcessContainer.add("AddEmployeeJPanel", addEmployeeJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            else{
                AddCustomerJPanel addCustomerJPanel = new AddCustomerJPanel(userProcessContainer, organizationDir, enterprise, organization);
                userProcessContainer.add("AddCustomerJPanel", addCustomerJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
        
    }//GEN-LAST:event_btnCreateEmployeeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateEmployeeTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) tblEmployeeDetails.getModel();
        
        model.setRowCount(0);
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[2];
            row[0] = employee;
            row[1] = employee.getEmp_id();
            model.addRow(row);
        }
    }
    
    private void populateNewCustomerTable(Enterprise enterprise){
        DefaultTableModel model = (DefaultTableModel) tblEmployeeDetails.getModel();
        
        model.setRowCount(0);
        
        for (Customer customer : enterprise.getCustomerDirectory().getCustomerlist()){
            if(customer.getOrganization().getName().equals("New Customer Organization")){
                Object[] row = new Object[2];
                row[0] = customer;
                row[1] = customer.getCustId();
                model.addRow(row);
            }
        }
    }
    
    private void populateCustomerTable(Enterprise enterprise){
        DefaultTableModel model = (DefaultTableModel) tblEmployeeDetails.getModel();
        
        model.setRowCount(0);
        
        for (Customer customer : enterprise.getCustomerDirectory().getCustomerlist()){
            if(customer.getOrganization().getName().equals("Existing Customer Organization")){
                Object[] row = new Object[2];
                row[0] = customer;
                row[1] = customer.getCustId();
                model.addRow(row);
            }
        }
    }
    
    private void orgJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgJComboBoxActionPerformed
        Organization organization = (Organization) orgJComboBox.getSelectedItem();
        if (organization != null){
            if(organization.getName().equals("Verification Organization")){
                populateEmployeeTable(organization);
            }
            else if(organization.getName().equals("Existing Customer Organization")){
                populateCustomerTable(enterprise);
            }
            else {
                populateNewCustomerTable(enterprise);
            }
        }
    }//GEN-LAST:event_orgJComboBoxActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Organization organization = (Organization) orgJComboBox.getSelectedItem();
        if (organization != null){
            if(organization.getName().equals("Verification Organization")){
                int row = tblEmployeeDetails.getSelectedRow();
                if(row<0){
                    JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                Employee employee = (Employee) tblEmployeeDetails.getValueAt(row,0);
                EditEmployeeJPanel editEmployeeJPanel = new EditEmployeeJPanel(userProcessContainer, employee, organizationDir);
                userProcessContainer.add("EditEmployeeJPanel", editEmployeeJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            else{
                int row = tblEmployeeDetails.getSelectedRow();
                if(row<0){
                    JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                Customer customer = (Customer) tblEmployeeDetails.getValueAt(row,0);
                EditCustomerJPanel editCustomerJPanel = new EditCustomerJPanel(userProcessContainer, customer, organizationDir, enterprise);
                userProcessContainer.add("EditCustomerJPanel", editCustomerJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
        
    }//GEN-LAST:event_btnEditActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateEmployee;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orgJComboBox;
    private javax.swing.JTable tblEmployeeDetails;
    // End of variables declaration//GEN-END:variables
}
