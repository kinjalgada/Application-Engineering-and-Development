/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ExistingCustomerRole;

import Business.Enterprise.Enterprise;
import Business.Organization.ExistingCustomerOrganization;
import Business.Policy.Product;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class PolicyBrochureJPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private  ExistingCustomerOrganization organization;
    private UserAccount account;
    /**
     * Creates new form PolicyBrochureJPanel
     */
    public PolicyBrochureJPanel(JPanel userProcessContainer, Enterprise enterprise, ExistingCustomerOrganization organization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        organization = organization;
        this.account = account;
        populateTable();
    }

    public void populateTable(){
        int rowCount = tblPolicyBrochure.getRowCount();
        DefaultTableModel model = (DefaultTableModel) tblPolicyBrochure.getModel();
        for(int i=rowCount-1;i>=0;i--){
            model.removeRow(i);
        }
        
        for (Product p : enterprise.getProductCatalog().getProductCatalog()) {
            Object row[] = new Object[8];
            row[0] = p;
            row[1] = p.getDescription();
            row[2] = p.getVehicleClass();
            row[3] = p.getDriverInsured();
            row[4] = p.getPolicyMaxCover();
            row[5] = p.getDuration();
            row[6] = p.getPlanBenefit();
            row[7] = p.getPolicyPrice();

            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPolicyBrochure = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnBuyPolicy = new javax.swing.JButton();

        tblPolicyBrochure.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblPolicyBrochure.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Plan Name", "Plan Description", "Vehicle Class", "Driver Insured", "Max Cover", "Duration", "Plan Benefit", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblPolicyBrochure);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Policy Brochure");

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnBuyPolicy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBuyPolicy.setText("Buy Policy");
        btnBuyPolicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyPolicyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(303, 303, 303)
                        .addComponent(btnBuyPolicy)))
                .addContainerGap(400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnBuyPolicy))
                .addContainerGap(77, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBuyPolicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyPolicyActionPerformed
        int row = tblPolicyBrochure.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Product policy = (Product) tblPolicyBrochure.getValueAt(row,0);
        BuyNewPolicyJPanel buyNewPolicyJPanel = new BuyNewPolicyJPanel(userProcessContainer, enterprise, account.getCustomer(), policy, account);
        userProcessContainer.add("BuyNewPolicyJPanel", buyNewPolicyJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBuyPolicyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBuyPolicy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPolicyBrochure;
    // End of variables declaration//GEN-END:variables
}
